name: Release

on:
  push:
    branches:
      - main
      - beta
      - alpha

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint

      - name: Run prettier check
        run: pnpm run prettier

      - name: Run tests
        run: pnpm run test

      - name: Create production environment file
        run: |
          cp .env.production.sample .env.production
          # Replace with actual production values from secrets
          sed -i 's|VITE_BASE_URL=.*|VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}|' .env.production
          sed -i 's|VITE_LAM_TOKEN=.*|VITE_LAM_TOKEN=${{ secrets.VITE_LAM_TOKEN }}|' .env.production

      - name: Build project
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta' || github.ref == 'refs/heads/alpha'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run semantic-release

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, release]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Deploy to Debian SSH machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_HOST_USERNAME }}
          key: ${{ secrets.SSH_HOST_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_HOST_PASSPHRASE }}
          script: |
            echo "Deploying new release..."
            sudo rm -rf /var/www/html/entrelazos-react/*

      - name: Copy build files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_HOST_USERNAME }}
          key: ${{ secrets.SSH_HOST_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_HOST_PASSPHRASE }}
          source: 'dist/*'
          target: '/var/www/html/entrelazos-react/'
          strip_components: 1
